openapi: 3.0.0
info:
  title: FamiPhoto API
  description: FamiPhotoのバックエンドAPI
  version: 1.0.0
servers:
  - url: http://localhost:8080
    description: ローカル開発環境
paths:
  /health:
    get:
      operationId: health
      summary: ヘルスチェック
      security: []
      description: APIサーバーの状態を確認する
      responses:
        '200':
          description: 正常
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'
  /auth/sign_up:
    post:
      operationId: SignUp
      summary: アカウント作成
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                myId:
                  type: string
                  description: 取得したいMyIDを指定します。
                  x-oapi-codegen-extra-tags:
                    validate: required
                password:
                  type: string
                  x-oapi-codegen-extra-tags:
                    validate: required
                isAdmin:
                  type: boolean
              required:
                - myId
                - password
                - isAdmin
      responses:
        '200':
          description: アカウント作成に成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  myId:
                    type: string
                required:
                  - myId
        '400':
          description: リクエストに不備がある
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: MyIDが既に使われている
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /auth/sign_in:
    post:
      operationId: SignIn
      summary: サインインします。
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignInResponse'
      responses:
        '200':
          description: サインイン成功
          content: {}
        '401':
          description: サインイン失敗
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /auth/sign_out:
    post:
      operationId: signOut
      summary: サインアウトします。
      security:
        - cookieAuth: []
      responses:
        '200':
          description: サインアウト
          content: {}
        '401':
          description: 未サインイン
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /auth/me:
    get:
      operationId: getMe
      summary: サインインしている自身の情報を取得します。
      security:
        - cookieAuth: []
      response:
        '200':
          description: 自身の情報
          content:
            application/json:
              schema:
                $ref: ../../openapi.yaml#/components/schemas/MeResponse
  /photos/{photoId}:
    get:
      operationId: getPhoto
      summary: 写真情報を取得します。
      security:
        - cookieAuth: []
      parameters:
        - name: photoId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 写真情報
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPhotoResponse'
        '404':
          description: 見つからなかった場合
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /photos:
    get:
      operationId: getPhotos
      summary: 写真一覧を取得します。
      security:
        - cookieAuth: []
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
        - name: offset
          in: query
          schema:
            type: integer
      responses:
        '200':
          description: 写真情報
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPhotoListResponse'
        '404':
          description: 見つからなかった場合
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: session
  schemas:
    HealthResponse:
      type: object
      properties:
        status:
          type: string
          example: OK
      required:
        - status
    ErrorResponse:
      type: object
      description: エラーレスポンス
      properties:
        statusCode:
          type: integer
          description: HTTPステータスコード
        errorCode:
          type: string
          description: APIが定義するエラーコード
        errorMessage:
          type: string
          description: システムエラーメッセージ詳細(本番環境はなし)
      required:
        - statusCode
        - errorCode
    SignInResponse:
      type: object
      properties:
        myId:
          type: string
          x-oapi-codegen-extra-tags:
            validate: required
        password:
          type: string
          x-oapi-codegen-extra-tags:
            validate: required
      required:
        - myId
        - password
    MeResponse:
      type: object
      properties:
        userId:
          type: integer
        myId:
          type: string
        isAdmin:
          type: bool
      required:
        - userId
        - myId
        - isAdmin
    GetPhotoListResponse:
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/GetPhotoListItem'
        total:
          type: integer
      required:
        - items
        - total
    GetPhotoListItem:
      properties:
        photoId:
          type: integer
      required:
        - photoId
    GetPhotoResponse:
      properties:
        photoId:
          type: integer
        photoName:
          type: string
      required:
        - photoId
        - photoName
