// Code generated by MockGen. DO NOT EDIT.
// Source: usecases/asset_usecase.go

// Package mock_usecases is a generated GoMock package.
package mock_usecases

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockAssetUseCase is a mock of AssetUseCase interface.
type MockAssetUseCase struct {
	ctrl     *gomock.Controller
	recorder *MockAssetUseCaseMockRecorder
}

// MockAssetUseCaseMockRecorder is the mock recorder for MockAssetUseCase.
type MockAssetUseCaseMockRecorder struct {
	mock *MockAssetUseCase
}

// NewMockAssetUseCase creates a new mock instance.
func NewMockAssetUseCase(ctrl *gomock.Controller) *MockAssetUseCase {
	mock := &MockAssetUseCase{ctrl: ctrl}
	mock.recorder = &MockAssetUseCaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAssetUseCase) EXPECT() *MockAssetUseCaseMockRecorder {
	return m.recorder
}

// GetOriginalFile mocks base method.
func (m *MockAssetUseCase) GetOriginalFile(ctx context.Context, photoFileID string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOriginalFile", ctx, photoFileID)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetOriginalFile indicates an expected call of GetOriginalFile.
func (mr *MockAssetUseCaseMockRecorder) GetOriginalFile(ctx, photoFileID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOriginalFile", reflect.TypeOf((*MockAssetUseCase)(nil).GetOriginalFile), ctx, photoFileID)
}

// GetPreview mocks base method.
func (m *MockAssetUseCase) GetPreview(ctx context.Context, photoID string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPreview", ctx, photoID)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPreview indicates an expected call of GetPreview.
func (mr *MockAssetUseCaseMockRecorder) GetPreview(ctx, photoID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPreview", reflect.TypeOf((*MockAssetUseCase)(nil).GetPreview), ctx, photoID)
}

// GetThumbnail mocks base method.
func (m *MockAssetUseCase) GetThumbnail(ctx context.Context, photoID string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetThumbnail", ctx, photoID)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetThumbnail indicates an expected call of GetThumbnail.
func (mr *MockAssetUseCaseMockRecorder) GetThumbnail(ctx, photoID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetThumbnail", reflect.TypeOf((*MockAssetUseCase)(nil).GetThumbnail), ctx, photoID)
}
