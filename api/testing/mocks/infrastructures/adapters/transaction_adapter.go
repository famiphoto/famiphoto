// Code generated by MockGen. DO NOT EDIT.
// Source: infrastructures/adapters/transaction_adapter.go

// Package mock_adapters is a generated GoMock package.
package mock_adapters

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockTransactionAdapter is a mock of TransactionAdapter interface.
type MockTransactionAdapter struct {
	ctrl     *gomock.Controller
	recorder *MockTransactionAdapterMockRecorder
}

// MockTransactionAdapterMockRecorder is the mock recorder for MockTransactionAdapter.
type MockTransactionAdapterMockRecorder struct {
	mock *MockTransactionAdapter
}

// NewMockTransactionAdapter creates a new mock instance.
func NewMockTransactionAdapter(ctrl *gomock.Controller) *MockTransactionAdapter {
	mock := &MockTransactionAdapter{ctrl: ctrl}
	mock.recorder = &MockTransactionAdapterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTransactionAdapter) EXPECT() *MockTransactionAdapterMockRecorder {
	return m.recorder
}

// BeginTxn mocks base method.
func (m *MockTransactionAdapter) BeginTxn(ctx context.Context, fn func(context.Context) error) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "BeginTxn", ctx, fn)
	ret0, _ := ret[0].(error)
	return ret0
}

// BeginTxn indicates an expected call of BeginTxn.
func (mr *MockTransactionAdapterMockRecorder) BeginTxn(ctx, fn interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BeginTxn", reflect.TypeOf((*MockTransactionAdapter)(nil).BeginTxn), ctx, fn)
}
