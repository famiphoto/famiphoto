// Code generated by MockGen. DO NOT EDIT.
// Source: services/photo_index_service.go

// Package mock_services is a generated GoMock package.
package mock_services

import (
	context "context"
	reflect "reflect"

	entities "github.com/famiphoto/famiphoto/api/entities"
	gomock "github.com/golang/mock/gomock"
)

// MockPhotoIndexService is a mock of PhotoIndexService interface.
type MockPhotoIndexService struct {
	ctrl     *gomock.Controller
	recorder *MockPhotoIndexServiceMockRecorder
}

// MockPhotoIndexServiceMockRecorder is the mock recorder for MockPhotoIndexService.
type MockPhotoIndexServiceMockRecorder struct {
	mock *MockPhotoIndexService
}

// NewMockPhotoIndexService creates a new mock instance.
func NewMockPhotoIndexService(ctrl *gomock.Controller) *MockPhotoIndexService {
	mock := &MockPhotoIndexService{ctrl: ctrl}
	mock.recorder = &MockPhotoIndexServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPhotoIndexService) EXPECT() *MockPhotoIndexServiceMockRecorder {
	return m.recorder
}

// RegisterPhotoToMasterData mocks base method.
func (m *MockPhotoIndexService) RegisterPhotoToMasterData(ctx context.Context, photoFile *entities.StorageFileInfo) (*entities.Photo, entities.PhotoMeta, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RegisterPhotoToMasterData", ctx, photoFile)
	ret0, _ := ret[0].(*entities.Photo)
	ret1, _ := ret[1].(entities.PhotoMeta)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// RegisterPhotoToMasterData indicates an expected call of RegisterPhotoToMasterData.
func (mr *MockPhotoIndexServiceMockRecorder) RegisterPhotoToMasterData(ctx, photoFile interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RegisterPhotoToMasterData", reflect.TypeOf((*MockPhotoIndexService)(nil).RegisterPhotoToMasterData), ctx, photoFile)
}

// RegisterPhotoToSearchEngine mocks base method.
func (m *MockPhotoIndexService) RegisterPhotoToSearchEngine(ctx context.Context, photo *entities.Photo, photoMeta entities.PhotoMeta) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RegisterPhotoToSearchEngine", ctx, photo, photoMeta)
	ret0, _ := ret[0].(error)
	return ret0
}

// RegisterPhotoToSearchEngine indicates an expected call of RegisterPhotoToSearchEngine.
func (mr *MockPhotoIndexServiceMockRecorder) RegisterPhotoToSearchEngine(ctx, photo, photoMeta interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RegisterPhotoToSearchEngine", reflect.TypeOf((*MockPhotoIndexService)(nil).RegisterPhotoToSearchEngine), ctx, photo, photoMeta)
}
